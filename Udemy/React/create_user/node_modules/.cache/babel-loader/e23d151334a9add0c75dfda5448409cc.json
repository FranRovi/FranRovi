{"ast":null,"code":"var _jsxFileName = \"/Users/franciscorovirosa/repos/FranRovi/Udemy/React/create_user/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\nimport Wrapper from '../Helpers/Wrapper';\nimport classes from './AddUser.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef(); // const [enteredUsername, setEnteredUsername] = useState('');\n  // const [enteredAge, setEnteredAge] = useState('');\n\n  const [hasError, setHasError] = useState();\n\n  const addUserHandler = event => {\n    // console.log(\"addUserHandler function called\")\n    event.preventDefault();\n    const refEnteredName = nameInputRef.current.value;\n    const refEnteredAge = ageInputRef.current.value;\n\n    if (refEnteredName.trim().length === 0 || refEnteredAge.trim().length === 0) {\n      setHasError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values)\"\n      });\n      return;\n    }\n\n    if (+refEnteredAge < 1) {\n      setHasError({\n        title: \"Invalid age\",\n        message: \"Please enter a valid age (age must be greater than zero)\"\n      });\n      return;\n    } // refEnteredAge\n\n\n    props.onAddUser(refEnteredName, refEnteredAge); // setEnteredUsername(\"\");\n    // setEnteredAge(\"\");\n    // ONE SHOULD RARELY CHANGE THE DOM DIRECTLY, SHOULD USE REACT TO DO SO\n    // BUT IN THIS CASE SINCE WE ARE ONLY CLEANING AN INPUT FIELD, ONE MAY ARGUE\n    // THAT WE ARE NOT CHANGING THE DOM (CREATING OR DELETING AN ELEMENT OR \n    // ADDING OR REMOVING A CLASS)\n\n    refEnteredName.current.value = '';\n    refEnteredAge.current.value = ''; // if (enteredUsername.trim().length === 0) {\n    //     // console.log(\"Must provide a name for user\");\n    //     // alert(\"User name must provided\");\n    //     return;\n    // } else {\n    //     console.log(enteredUsername);\n    //     setEnteredUsername(\"\");\n    // }\n    // if (enteredAge.trim().length === 0 || +enteredAge < 1) {\n    //     // console.log(\"User age must be provide, and be greater than 0\");\n    //     // alert(\"User age must be provided, and be greater than 0\");\n    //     return;\n    // } else {\n    //     console.log(enteredAge);\n    //     setEnteredAge(\"\");\n    // }\n    // console.log(enteredUsername, enteredAge);\n    // setEnteredUsername(\"\");\n    // setEnteredAge(\"\");\n  }; // const usernameChangeHandler = (event) => {\n  //     setEnteredUsername(event.target.value)\n  // }\n  // const ageChangeHandler = (event) => {\n  //     setEnteredAge(event.target.value)\n  // }\n\n\n  const errorHandler = () => {\n    setHasError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [hasError && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: hasError.title,\n      message: hasError.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUser, \"gGOitgZdtusec+3SRu1WWatDIYI=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/franciscorovirosa/repos/FranRovi/Udemy/React/create_user/src/components/Users/AddUser.js"],"names":["React","useState","useRef","Card","Button","ErrorModal","Wrapper","classes","AddUser","props","nameInputRef","ageInputRef","hasError","setHasError","addUserHandler","event","preventDefault","refEnteredName","current","value","refEnteredAge","trim","length","title","message","onAddUser","errorHandler","input"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\nimport Wrapper from '../Helpers/Wrapper';\nimport classes from './AddUser.module.css';\n\n\nconst AddUser = (props) => {\n    const  nameInputRef = useRef();\n    const  ageInputRef = useRef();\n\n    // const [enteredUsername, setEnteredUsername] = useState('');\n    // const [enteredAge, setEnteredAge] = useState('');\n\n    const [hasError, setHasError] = useState();\n\n    const addUserHandler = (event) => {\n        // console.log(\"addUserHandler function called\")\n        event.preventDefault();\n        const refEnteredName = nameInputRef.current.value;\n        const refEnteredAge = ageInputRef.current.value;\n\n        if (refEnteredName.trim().length === 0 || refEnteredAge.trim().length === 0) {\n            setHasError({\n                title: \"Invalid input\",\n                message: \"Please enter a valid name and age (non-empty values)\"\n            });\n            return;\n        }\n        if (+refEnteredAge < 1) {\n            setHasError({\n                title: \"Invalid age\",\n                message: \"Please enter a valid age (age must be greater than zero)\"\n            });\n            return;\n        }\n        // refEnteredAge\n        props.onAddUser(refEnteredName, refEnteredAge);\n        // setEnteredUsername(\"\");\n        // setEnteredAge(\"\");\n        // ONE SHOULD RARELY CHANGE THE DOM DIRECTLY, SHOULD USE REACT TO DO SO\n        // BUT IN THIS CASE SINCE WE ARE ONLY CLEANING AN INPUT FIELD, ONE MAY ARGUE\n        // THAT WE ARE NOT CHANGING THE DOM (CREATING OR DELETING AN ELEMENT OR \n        // ADDING OR REMOVING A CLASS)\n        refEnteredName.current.value = '';\n        refEnteredAge.current.value = '';\n\n\n\n        // if (enteredUsername.trim().length === 0) {\n        //     // console.log(\"Must provide a name for user\");\n        //     // alert(\"User name must provided\");\n        //     return;\n        // } else {\n        //     console.log(enteredUsername);\n        //     setEnteredUsername(\"\");\n        // }\n        // if (enteredAge.trim().length === 0 || +enteredAge < 1) {\n        //     // console.log(\"User age must be provide, and be greater than 0\");\n        //     // alert(\"User age must be provided, and be greater than 0\");\n        //     return;\n        // } else {\n        //     console.log(enteredAge);\n        //     setEnteredAge(\"\");\n        // }\n        // console.log(enteredUsername, enteredAge);\n        // setEnteredUsername(\"\");\n        // setEnteredAge(\"\");\n    }\n\n    // const usernameChangeHandler = (event) => {\n    //     setEnteredUsername(event.target.value)\n    // }\n\n    // const ageChangeHandler = (event) => {\n    //     setEnteredAge(event.target.value)\n    // }\n\n    const errorHandler = () => {\n        setHasError(null);\n    }\n\n    return(\n        <Wrapper>\n            {hasError && <ErrorModal title={hasError.title} message={hasError.message} onConfirm={errorHandler}/>}\n            <Card className={classes.input}>\n                <form onSubmit={addUserHandler}>\n                    <label htmlFor=\"username\">Username</label>\n                    {/* <input id =\"username\" type=\"text\" value={enteredUsername} onChange={usernameChangeHandler} ref={nameInputRef} /> */}\n                    <input id =\"username\" type=\"text\" ref={nameInputRef} />\n                    <label htmlFor=\"age\">Age (Years)</label>\n                    {/* <input id =\"age\" type=\"number\" value={enteredAge} onChange={ageChangeHandler} ref={ageInputRef} /> */}\n                    <input id =\"age\" type=\"number\" ref={ageInputRef} />\n                    <Button type=\"submit\">Add User</Button>\n                </form>\n            </Card>\n        </Wrapper>\n    )\n}\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}