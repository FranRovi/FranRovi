{"ast":null,"code":"var _jsxFileName = \"/Users/franciscorovirosa/repos/FranRovi/Udemy/React/food_order_app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmoumt: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.item[existingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n\n    if (existingCartItem) {\n      updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItem = { ...action.item\n      };\n      updatedItems = state.items.concat(updatedItem);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE_ITEM\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount--\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/franciscorovirosa/repos/FranRovi/Udemy/React/food_order_app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmoumt","cartReducer","state","action","type","updatedTotalAmount","totalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import React, { useReducer }  from 'react';\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n    items: [],\n    totalAmoumt: 0,\n};\n\nconst cartReducer = (state, action) => {\n    if(action.type === \"ADD_ITEM\") {\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n        const existingCartItem = state.item[existingCartItemIndex];\n        \n        let updatedItem;\n        let updatedItems; \n\n        if (existingCartItem) {\n            updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.item.amount\n            };\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        } else {\n            updatedItem = {...action.item};\n            updatedItems = state.items.concat(updatedItem);\n        }\n\n\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    if(action.type === \"REMOVE_ITEM\") {\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n        const existingItem = state.items[existingCartItemIndex]\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\n        let updatedItems;\n        if (existingItem.amount === 1) {\n            updatedItems = state.items.filter((item) => item.id !== action.id);\n        } else {\n            const updatedItem = {\n                ...existingItem,\n                amount: existingItem.amount--\n            };\n            updatedItems = [...state.items, ];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        }\n    }\n\n    return defaultCartState; \n};\n\nconst CartProvider = (props) => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = ((item) => {\n        dispatchCartAction({\n            type: \"ADD_ITEM\",\n            item: item\n        });\n    });\n\n\n    const removeItemFromCartHandler = ((id) => {\n        dispatchCartAction({\n            type: \"REMOVE_ITEM\",\n            id: id\n        })\n    });\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n    return(\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}