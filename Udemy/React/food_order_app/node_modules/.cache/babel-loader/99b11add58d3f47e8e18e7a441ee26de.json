{"ast":null,"code":"var _jsxFileName = \"/Users/franciscorovirosa/repos/FranRovi/Udemy/React/food_order_app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmoumt: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmoun = state.totalAmount + action.item.price * action.item.amount;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItemm: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/franciscorovirosa/repos/FranRovi/Udemy/React/food_order_app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmoumt","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmoun","totalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItemm","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA+B;AAC3B,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,iBAAiB,GAAGN,KAAK,CAACO,WAAN,GAAoBN,MAAM,CAACI,IAAP,CAAYG,KAAZ,GAAoBP,MAAM,CAACI,IAAP,CAAYI,MAA9E;AACH;;AACD,SAAOb,gBAAP;AACH,CAND;;AAQA,MAAMc,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCnB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMkB,oBAAoB,GAAKT,IAAD,IAAU;AACpCQ,IAAAA,kBAAkB,CAAC;AACfX,MAAAA,IAAI,EAAE,UADS;AAEfG,MAAAA,IAAI,EAAEA;AAFS,KAAD,CAAlB;AAIH,GALD;;AAQA,QAAMU,yBAAyB,GAAKC,EAAD,IAAQ;AACvCH,IAAAA,kBAAkB,CAAC;AACfX,MAAAA,IAAI,EAAE,aADS;AAEfc,MAAAA,EAAE,EAAEA;AAFW,KAAD,CAAlB;AAIH,GALD;;AAOA,QAAMC,WAAW,GAAG;AAChBpB,IAAAA,KAAK,EAAEe,SAAS,CAACf,KADD;AAEhBU,IAAAA,WAAW,EAAEK,SAAS,CAACL,WAFP;AAGhBW,IAAAA,QAAQ,EAAEJ,oBAHM;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7BD;;GAAMV,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer }  from 'react';\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n    items: [],\n    totalAmoumt: 0\n};\n\nconst cartReducer = (state, action) => {\n    if(action.type === \"ADD_ITEM\") {\n        const updatedItems = state.items.concat(action.item);\n        const updatedTotalAmoun = state.totalAmount + action.item.price * action.item.amount;\n    }\n    return defaultCartState; \n};\n\nconst CartProvider = (props) => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = ((item) => {\n        dispatchCartAction({\n            type: \"ADD_ITEM\",\n            item: item\n        });\n    });\n\n\n    const removeItemFromCartHandler = ((id) => {\n        dispatchCartAction({\n            type: \"REMOVE_ITEM\",\n            id: id\n        })\n    });\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItemm: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n    return(\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}